<?xml version="1.0" encoding="utf-8"?>

<!-- Permission is granted to copy, distribute and/or modify this document -->
<!-- under the terms of the GNU Free Documentation License, Version 1.3 or -->
<!-- any later version published by the Free Software Foundation; with the -->
<!-- Invariant Sections being ``GNU General Public License'', with the -->
<!-- Front-Cover Texts being ``A GNU Manual'', and with the Back-Cover Texts -->
<!-- as in (a) below.  A copy of the license is included in the section -->
<!-- entitled ``GNU Free Documentation License''. -->
<!--  -->
<!-- (a) The FSF's Back-Cover Text is: ``You have the freedom to -->
<!-- copy and modify this GNU manual.  Buying copies from the FSF -->
<!-- supports it in developing GNU and promoting software freedom.'' -->

<chapter xmlns="http://docbook.org/ns/docbook"
	 xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0">
  <title>Putting all together</title>
  <para>
    So far we have seen the most important objects involved doing an audio processing
    tree. Now we want to do complete example putting all together. In this example we
    instantiate AgsAudioThread and AgsChannelThread to play a simple pattern. The sound
    we use is generated using a sinus wave.
  </para>
  
  <para>
    In order that the threads are used we provide an appropriate AgsConfig. Further we
    define an AgsPattern and add the needed recalls to do playback using the AgsRecallFactory.
  </para>
  
  <example>
    <title>Simple pattern sequencer with master playback</title>
    <programlisting language="C">
<xi:include href="../listings/complete_example.c" parse="text" />
    </programlisting>
  </example>
</chapter>
